{"version":3,"file":"component---src-page-templates-index-template-tsx-b39e12a417ad8ddcd48a.js","mappings":"2VACWA,EAAO,qCACPC,EAAW,0CACXC,EAAY,2CCIvB,MAAMC,E,MAAKC,GAAAA,KAAgBC,GA6CdC,EAAe,IAAMC,EAAAA,cAAAA,QAAAA,KAAAA,gCAElC,MAtC+BC,IAAA,IAAGC,MAAM,kBAAEC,GAAmB,YAAEC,GAAa,SAC1EJ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAA0B,aAArBI,EAAYC,KAAsB,YAAc,aACpDF,EAAkBG,MAAMC,KAAIC,IAAA,IAAC,YAAEC,EAAW,KAAEC,GAAW,SACtDV,EAAAA,cAAAA,MAAAA,CAAKW,UAAWf,EAAG,QAASgB,IAAKH,EAAYI,MAC3Cb,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIW,UAAWf,EAAG,cAAea,EAAYK,OAC7Cd,EAAAA,cAAAA,QAAAA,CAAOW,UAAWf,EAAG,aAClBa,EAAYM,KAAI,MAAKN,EAAYO,UAEpChB,EAAAA,cAAAA,MAAAA,CAAKiB,wBAAyB,CAAEC,OAAQR,MAEtC,IAEP,C","sources":["webpack://journal-raum-als-interface/./src/page-templates/index-template.module.scss","webpack://journal-raum-als-interface/./src/page-templates/index-template.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var post = \"index-template-module--post--84e3a\";\nexport var postData = \"index-template-module--post-data--239f1\";\nexport var postTitle = \"index-template-module--post-title--54cb4\";","import React from 'react';\nimport type { HeadFC } from 'gatsby';\nimport { graphql } from 'gatsby';\n\nimport classNames from 'classnames/bind';\nimport * as styles from './index-template.module.scss';\n\nconst cx = classNames.bind(styles);\n\ntype Props = {\n  data: any;\n  pageContext: {\n    page?: string;\n  }\n};\n\nconst Index: React.FC<Props> = ({ data: { allMarkdownRemark }, pageContext }) => (\n  <>\n    <h1>{pageContext.page === 'project1' ? 'Project 1' : 'Project 2'}</h1>\n    {allMarkdownRemark.nodes.map(({ frontmatter, html }: any) => (\n      <div className={cx('post')} key={frontmatter.slug}>\n        <div>\n          <h2 className={cx('postTitle')}>{frontmatter.title}</h2>\n          <small className={cx('postData')}>\n            {frontmatter.date} - {frontmatter.location}\n          </small>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      </div>\n    ))}\n  </>\n);\n\nexport const pageQuery = graphql`\n  query IndexQuery($tagsRegex: String!) {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: ASC } }\n      filter: { frontmatter: { tags: { regex: $tagsRegex } } }\n    ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          location\n          slug\n          title\n        }\n        html\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC = () => <title>Journal - Raum als Interface</title>;\n\nexport default Index;\n"],"names":["post","postData","postTitle","cx","classNames","styles","Head","React","_ref","data","allMarkdownRemark","pageContext","page","nodes","map","_ref2","frontmatter","html","className","key","slug","title","date","location","dangerouslySetInnerHTML","__html"],"sourceRoot":""}